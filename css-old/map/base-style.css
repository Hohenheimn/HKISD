    @charset "UTF-8";
    @font-face {
        font-family: 'Telstra Akkurat';
        src: url("../../fonts/map/TelstraAkkurat-Regular.eot");
        src: url("../../fonts/map/TelstraAkkurat-Regular.eot?#iefix") format("embedded-opentype"), url("../../fonts/map/TelstraAkkurat-Regular.woff") format("woff"), url("../../fonts/map/TelstraAkkurat-Regular.ttf") format("truetype");
        font-weight: normal;
        font-style: normal;
    }

    @font-face {
        font-family: 'Telstra Akkurat Light';
        src: url("../../fonts/map/TelstraAkkurat-Light.eot");
        src: url("../../fonts/map/TelstraAkkurat-Light.eot?#iefix") format("embedded-opentype"), url("../../fonts/map/TelstraAkkurat-Light.woff") format("woff"), url("../../fonts/map/TelstraAkkurat-Light.ttf") format("truetype");
        font-weight: 300;
        font-style: normal;
    }

    @font-face {
        font-family: 'Telstra Gravur';
        src: url("../../fonts/map/TelstraGravur-Regular.eot");
        src: url("../../fonts/map/TelstraGravur-Regular.eot?#iefix") format("embedded-opentype"), url("../../fonts/map/TelstraGravur-Regular.woff") format("woff"), url("../../fonts/map/TelstraGravur-Regular.ttf") format("truetype");
        font-weight: normal;
        font-style: normal;
    }

    @font-face {
        font-family: 'icons';
        src: url("../../fonts/map/icons.eot?31121135");
        src: url("../../fonts/map/icons.eot?31121135#iefix") format("embedded-opentype"), url("../../fonts/map/icons.woff2?31121135") format("woff2"), url("../../fonts/map/icons.woff?31121135") format("woff"), url("../../fonts/map/icons.ttf?31121135") format("truetype"), url("../../fonts/map/icons.svg?31121135#icons") format("svg");
        font-weight: normal;
        font-style: normal;
    }
    /* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
    /* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
    /*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'icons';
    src: url('../../fonts/map/icons.svg?31121135#icons') format('svg');
  }
}
*/

    [class^="icon-"]:before,
    [class*=" icon-"]:before {
        font-family: "icons";
        font-style: normal;
        font-weight: normal;
        speak: none;
        display: inline-block;
        text-decoration: inherit;
        width: 1em;
        margin-right: .2em;
        text-align: center;
        /* opacity: .8; */
        /* For safety - reset parent styles, that can break glyph codes*/
        font-variant: normal;
        text-transform: none;
        /* fix buttons height, for twitter bootstrap */
        line-height: 1em;
        /* Animation center compensation - margins should be symmetric */
        /* remove if not needed */
        margin-left: .2em;
        /* you can be more comfortable with increased icons size */
        /* font-size: 120%; */
        /* Font smoothing. That was taken from TWBS */
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        /* Uncomment for 3D effect */
        /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
    }

    .icon-down-open-big:before {
        content: '\e800';
    }
    /* '' */

    .icon-location:before {
        content: '\e801';
    }
    /* '' */

    .icon-cancel-circled-outline:before {
        content: '\e802';
    }
    /* '' */

    .icon-globe-alt:before {
        content: '\e803';
    }
    /* '' */

    .icon-download-alt:before {
        content: '\e804';
    }
    /* '' */

    .icon-signal:before {
        content: '\e805';
    }
    /* '' */

    .icon-people:before {
        content: '\e806';
    }
    /* '' */

    .icon-overall:before {
        content: '\e807';
    }
    /* '' */

    .icon-development:before {
        content: '\e808';
    }
    /* '' */

    .icon-finance:before {
        content: '\e809';
    }
    /* '' */

    .icon-ict:before {
        content: '\e80a';
    }
    /* '' */

    .icon-innovation:before {
        content: '\e80b';
    }
    /* '' */

    .icon-home:before {
        content: '\e81c';
    }
    /* '' */

    .icon-twitter:before {
        content: '\f099';
    }
    /* '' */

    .icon-facebook:before {
        content: '\f09a';
    }
    /* '' */

    .icon-linkedin:before {
        content: '\f0e1';
    }
    /* '' */
    /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
    /**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

    html {
        font-family: sans-serif;
        /* 1 */
        -ms-text-size-adjust: 100%;
        /* 2 */
        -webkit-text-size-adjust: 100%;
        /* 2 */
    }
    /**
 * Remove default margin.
 */

    body {
        margin: 0;
    }
    /* HTML5 display definitions
   ========================================================================== */
    /**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

    article,
    aside,
    details,
    figcaption,
    figure,
    footer,
    header,
    hgroup,
    main,
    menu,
    nav,
    section,
    summary {
        display: block;
    }
    /**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

    audio,
    canvas,
    progress,
    video {
        display: inline-block;
        /* 1 */
        vertical-align: baseline;
        /* 2 */
    }
    /**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

    audio:not([controls]) {
        display: none;
        height: 0;
    }
    /**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

    [hidden],
    template {
        display: none;
    }
    /* Links
   ========================================================================== */
    /**
 * Remove the gray background color from active links in IE 10.
 */

    a {
        background-color: transparent;
    }
    /**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

    a:active,
    a:hover {
        outline: 0;
    }
    /* Text-level semantics
   ========================================================================== */
    /**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

    abbr[title] {
        border-bottom: 1px dotted;
    }
    /**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

    b,
    strong {
        font-weight: bold;
    }
    /**
 * Address styling not present in Safari and Chrome.
 */

    dfn {
        font-style: italic;
    }
    /**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

    h1 {
        font-size: 2em;
        margin: 0.67em 0;
    }
    /**
 * Address styling not present in IE 8/9.
 */

    mark {
        background: #ff0;
        color: #000;
    }
    /**
 * Address inconsistent and variable font size in all browsers.
 */

    small {
        font-size: 80%;
    }
    /**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sup {
        top: -0.5em;
    }

    sub {
        bottom: -0.25em;
    }
    /* Embedded content
   ========================================================================== */
    /**
 * Remove border when inside `a` element in IE 8/9/10.
 */

    img {
        border: 0;
    }
    /**
 * Correct overflow not hidden in IE 9/10/11.
 */

    svg:not(:root) {
        overflow: hidden;
    }
    /* Grouping content
   ========================================================================== */
    /**
 * Address margin not present in IE 8/9 and Safari.
 */

    figure {
        margin: 1em 40px;
    }
    /**
 * Address differences between Firefox and other browsers.
 */

    hr {
        box-sizing: content-box;
        height: 0;
    }
    /**
 * Contain overflow in all browsers.
 */

    pre {
        overflow: auto;
    }
    /**
 * Address odd `em`-unit font size rendering in all browsers.
 */

    code,
    kbd,
    pre,
    samp {
        font-family: monospace, monospace;
        font-size: 1em;
    }
    /* Forms
   ========================================================================== */
    /**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
    /**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

    button,
    input,
    optgroup,
    select,
    textarea {
        color: inherit;
        /* 1 */
        font: inherit;
        /* 2 */
        margin: 0;
        /* 3 */
    }
    /**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

    button {
        overflow: visible;
    }
    /**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

    button,
    select {
        text-transform: none;
    }
    /**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

    button,
    html input[type="button"],
    input[type="reset"],
    input[type="submit"] {
        -webkit-appearance: button;
        /* 2 */
        cursor: pointer;
        /* 3 */
    }
    /**
 * Re-set default cursor for disabled elements.
 */

    button[disabled],
    html input[disabled] {
        cursor: default;
    }
    /**
 * Remove inner padding and border in Firefox 4+.
 */

    button::-moz-focus-inner,
    input::-moz-focus-inner {
        border: 0;
        padding: 0;
    }
    /**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

    input {
        line-height: normal;
    }
    /**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

    input[type="checkbox"],
    input[type="radio"] {
        box-sizing: border-box;
        /* 1 */
        padding: 0;
        /* 2 */
    }
    /**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        height: auto;
    }
    /**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

    input[type="search"] {
        -webkit-appearance: textfield;
        /* 1 */
        box-sizing: content-box;
        /* 2 */
    }
    /**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

    input[type="search"]::-webkit-search-cancel-button,
    input[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    /**
 * Define consistent border, margin, and padding.
 */

    fieldset {
        border: 1px solid #c0c0c0;
        margin: 0 2px;
        padding: 0.35em 0.625em 0.75em;
    }
    /**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

    legend {
        border: 0;
        /* 1 */
        padding: 0;
        /* 2 */
    }
    /**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

    textarea {
        overflow: auto;
    }
    /**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

    optgroup {
        font-weight: bold;
    }
    /* Tables
   ========================================================================== */
    /**
 * Remove most spacing between table cells.
 */

    table {
        border-collapse: collapse;
        border-spacing: 0;
    }

    td,
    th {
        padding: 0;
    }

    html {
        box-sizing: border-box;
        font-size: 62.5%;
        outline: none;
        font-family: 'Telstra Akkurat';
    }

    * {
        box-sizing: inherit;
        -ms-flex-negative: 1;
        flex-shrink: 1;
    }

    *::before,
    *::after {
        box-sizing: inherit;
    }

    a {
        text-decoration: none;
    }

    body {
        color: #000;
        font-size: 1.4rem;
        line-height: 1.2;
        overflow-x: hidden;
    }

    h1 {
        color: #001E82;
        margin: 0 0 10px;
        font-size: 3rem;
        font-family: 'Telstra Akkurat';
        text-align: center;
    }

    @media only screen and (min-width: 1200px) {
        h1 {
            text-align: left;
        }
    }

    h1+p {
        color: #001E82;
        font-size: 14px;
        line-height: 16.8px;
        margin-top: .5em;
        text-align: center;
        -webkit-margin-after: 14px;
        -webkit-margin-before: 7px;
    }

    @media only screen and (max-width: 1200px) {
        h1+p {
            color: #001E82;
            font-size: 14px !important;
            line-height: 16.8px !important;
            margin-top: .5em;
            text-align: center;
            -webkit-margin-after: 14px;
            -webkit-margin-before: 7px;
        }
    }

    @media only screen and (max-width: 1366px) {
        h1+p {
            color: #001E82;
            font-size: 14px !important;
            line-height: 16.8px !important;
            margin-top: .5em;
            text-align: center;
            -webkit-margin-after: 14px;
            -webkit-margin-before: 7px;
        }
    }

    @media only screen and (min-width: 1200px) {
        h1+p {
            text-align: left;
        }
    }
    /* Slider */

    .slick-slider {
        position: relative;
        display: block;
        box-sizing: border-box;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -ms-touch-action: pan-y;
        touch-action: pan-y;
        outline: none;
        -webkit-tap-highlight-color: transparent;
    }

    .slick-list {
        position: relative;
        overflow: hidden;
        display: block;
        margin: 0;
        padding: 0;
    }

    .slick-list:focus,
    .slick-list:active,
    .slick-list:hover {
        outline: none;
    }

    .slick-list.dragging {
        cursor: pointer;
        cursor: hand;
        outline: none;
    }

    .slick-slider .slick-track,
    .slick-slider .slick-list {
        -ms-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
    }

    .slick-track {
        position: relative;
        left: 0;
        top: 0;
        display: block;
    }

    .slick-track:before,
    .slick-track:after {
        content: "";
        display: table;
    }

    .slick-track:after {
        clear: both;
    }

    .slick-loading .slick-track {
        visibility: hidden;
    }

    .slick-slide {
        float: left;
        height: 100%;
        min-height: 1px;
        display: none;
    }

    [dir="rtl"] .slick-slide {
        float: right;
    }

    .slick-slide img {
        display: block;
    }

    .slick-slide.slick-loading img {
        display: none;
    }

    .slick-slide.dragging img {
        pointer-events: none;
    }

    .slick-initialized .slick-slide {
        display: block;
        outline: none;
    }

    .slick-loading .slick-slide {
        visibility: hidden;
    }

    .slick-vertical .slick-slide {
        display: block;
        height: auto;
        border: 1px solid transparent;
    }

    .slick-arrow.slick-hidden {
        display: none;
    }

    .sk-barometer {
        color: #001E82;
        margin-top: 40px;
    }

    .sk-barometer p {
        color: #001E82;
        font-family: 'Telstra Akkurat';
        font-size: 14px;
        line-height: 16.8px;
        text-align: left;
        -webkit-margin-after: 14px;
        -webkit-margin-before: 14px;
    }

    .sk-barometer h2 {
        color: #001E82;
        font-family: 'Telstra Akkurat Light';
        font-size: 1.8rem;
        font-weight: bold;
        line-height: 21.6px;
        padding: 0;
        -webkit-margin-after: 14.94px;
        -webkit-margin-before: 14.94px;
    }

    .sk-barometer .sk-barometer-chart {
        position: relative;
        width: 95%;
        margin: auto;
        padding: 0;
    }

    .sk-barometer .sk-barometer-chart:before {
        background: #888;
        content: '';
        display: block;
        height: 1px;
        left: 2%;
        position: absolute;
        top: 28%;
        width: 96%;
        z-index: 0;
    }

    @media only screen and (min-width: 1200px) {
        .sk-barometer .sk-barometer-chart:before {
            top: 35%;
        }
    }

    .sk-barometer .sk-barometer-chart li {
        font-size: 1.2rem;
        list-style: none;
        margin: 0;
        padding: 0;
        text-align: center;
    }

    .sk-barometer .sk-barometer-chart li span {
        display: block;
        height: 40px;
        margin-bottom: 5px;
        margin: auto;
        position: relative;
        transition: all 0.3s ease-out;
        width: 40px;
        z-index: 4;
    }

    .sk-barometer .sk-barometer-chart li em {
        background: #fe9201;
        border-radius: 50%;
        display: block;
        height: 100%;
        left: 50%;
        position: absolute;
        top: 50%;
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        transition: all 0.3s ease-out;
        width: 100%;
        z-index: 9;
    }

    .sk-barometer .sk-barometer-chart li i {
        background: #fe9201;
        color: #fff;
        display: block;
        font-style: normal;
        font-weight: bold;
        left: 50%;
        opacity: 0;
        position: absolute;
        top: 50%;
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        transition: all 0.3s ease-out;
    }

    .sk-barometer .sk-barometer-chart li:hover em {
        height: 100% !important;
        width: 100% !important;
    }

    .sk-barometer .sk-barometer-chart li:hover i {
        opacity: 1;
    }

    .sk-barometer .slick-arrow {
        cursor: pointer;
        font-family: 'Telstra Akkurat Light';
        font-size: 40px;
        position: absolute;
        top: 0;
        line-height: 40px;
    }

    .sk-barometer .slick-arrow--prev {
        left: -20px;
    }

    .sk-barometer .slick-arrow--next {
        right: -20px;
    }

    .tab-city {
        background: url(../../images/bg-city.png) 50% 50%/contain no-repeat fixed;
    }

    @media only screen and (min-width: 1200px) {
        .tab-city {
            background: url(../../images/bg-city.png) 50% 50%/contain no-repeat;
        }
    }

    .sk-rankings-chart {
        color: #001E82;
        font-size: 1.2rem;
        margin: 60px auto 0;
        position: relative;
    }

    @media only screen and (min-width: 1200px) {
        .sk-rankings-chart {
            width: calc(93%);
        }
    }

    .sk-rankings-chart--right {
        width: 100%;
        max-width: 500px;
        padding: 0 50px;
    }

    @media only screen and (min-width: 1200px) {
        .sk-rankings-chart--right {
            margin: 100px 40px 0 0;
            max-width: inherit;
            float: right;
            width: calc(100% - 300px);
        }
    }

    .sk-rankings-chart--right .sk-rankings-chart__label:nth-child(1) {
        left: 25%;
    }

    .sk-rankings-chart--right .sk-rankings-chart__label:nth-child(2) {
        right: 200px;
    }

    .sk-rankings-chart--right .sk-rankings-chart__label:nth-child(3) {
        right: 60px;
    }

    .sk-rankings-chart__label {
        font-size: 1.3rem;
        display: none;
    }

    @media only screen and (min-width: 1200px) {
        .sk-rankings-chart__label {
            font-size: 1.1rem;
            display: block;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-rankings-chart__label {
            font-size: 1.3rem;
        }
    }

    .sk-rankings-chart__label:nth-child(1) {
        left: 20%;
        position: absolute;
        top: -3em;
    }

    .sk-rankings-chart__label:nth-child(2) {
        position: absolute;
        right: 150px;
        top: -3em;
    }

    .sk-rankings-chart__label:nth-child(3) {
        font-size: 1.3rem;
        position: absolute;
        right: -30px;
        text-align: center;
        top: -5em;
    }

    .sk-rankings-chart__label:nth-child(3).double {
        top: -6em;
    }

    .sk-rankings-chart__zero {
        bottom: 100%;
        left: -12px;
        position: absolute;
        text-align: center;
        width: 24px;
    }

    .sk-rankings-chart__row-title {
        margin: 20px 0;
        text-align: center;
        font-size: 1.6rem;
    }

    @media only screen and (min-width: 1200px) {
        .sk-rankings-chart__row-title {
            -ms-flex-align: center;
            align-items: center;
            display: -ms-flexbox;
            display: flex;
            -ms-flex-pack: end;
            justify-content: flex-end;
            margin: 0;
            text-align: right;
            width: 20%;
            font-size: 1.2rem;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-rankings-chart__row {
            display: -ms-flexbox;
            display: flex;
        }
    }

    .sk-rankings-chart__row:last-child .sk-rankings-chart__row-scores::after {
        bottom: 36%;
    }

    .sk-rankings-chart__row:last-child .sk-rankings-chart__score-indicator {
        top: calc(50% - 1px);
    }

    .sk-rankings-chart__row:last-child .sk-rankings-chart__score-placeholder,
    .sk-rankings-chart__row:last-child .sk-rankings-chart__score-item {
        height: 26px;
        min-height: initial;
        overflow: hidden;
    }

    .sk-rankings-chart__row-scores {
        display: none;
        -ms-flex-positive: 1;
        flex-grow: 1;
        position: relative;
    }

    @media only screen and (min-width: 1200px) {
        .sk-rankings-chart__row-scores {
            display: -ms-flexbox;
            display: flex;
        }
    }

    .sk-rankings-chart__row-scores::after {
        border-bottom: 1px solid rgba(0, 0, 0, 0.15);
        content: '';
        display: block;
        left: 18px;
        position: absolute;
        top: 50%;
        width: calc(100% + 170px);
    }

    .sk-rankings-chart__scores-container {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-positive: 1;
        flex-grow: 1;
        position: relative;
    }

    .sk-rankings-chart__score-placeholder,
    .sk-rankings-chart__score-item {
        border-right: 1px solid #888;
        min-height: 38px;
        position: relative;
        width: 4%;
    }

    .sk-rankings-chart__score-item {
        width: 14.285714%;
    }

    .sk-rankings__score-label {
        bottom: 100%;
        position: absolute;
        right: -12px;
        text-align: center;
        width: 24px;
    }

    .sk-rankings-chart__score-indicator {
        height: 11px;
        width: 11px;
        border-radius: 50%;
        background: #fe9201;
        left: 0;
        position: absolute;
        top: calc(50% - 5px);
        transition: left 0.3s ease-out;
        z-index: 2;
    }

    .sk-rankings-chart__score-indicator--two {
        background: #eb3225;
    }

    .sk-rankings-chart__score-indicator--usa {
        background: #001E82;
    }

    .sk-rankings-chart__score-indicator--aus {
        background: #eb3225;
    }

    .sk-rankings-chart__score-indicator--asia {
        background: #5ab75a;
    }

    .sk-ranking-number {
        -ms-flex-align: center;
        align-items: center;
        background: #fe9201;
        color: #fff;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        -ms-flex-pack: center;
        justify-content: center;
        position: relative;
        text-align: center;
        z-index: 2;
        transition: all .3s;
        height: 65px;
        width: 65px;
        border-radius: 50%;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
    }

    .sk-ranking-number--1 {
        height: 90px;
        width: 90px;
        border-radius: 50%;
    }

    .sk-ranking-number--1:before {
        height: 90px;
        width: 90px;
        border-radius: 50%;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number--1 {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
        .sk-ranking-number--1:before {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
    }

    .sk-ranking-number--2 {
        height: 85px;
        width: 85px;
        border-radius: 50%;
    }

    .sk-ranking-number--2:before {
        height: 85px;
        width: 85px;
        border-radius: 50%;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number--2 {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
        .sk-ranking-number--2:before {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
    }

    .sk-ranking-number--3 {
        height: 80px;
        width: 80px;
        border-radius: 50%;
    }

    .sk-ranking-number--3:before {
        height: 80px;
        width: 80px;
        border-radius: 50%;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number--3 {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
        .sk-ranking-number--3:before {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
    }

    .sk-ranking-number--4 {
        height: 75px;
        width: 75px;
        border-radius: 50%;
    }

    .sk-ranking-number--4:before {
        height: 75px;
        width: 75px;
        border-radius: 50%;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number--4 {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
        .sk-ranking-number--4:before {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
    }

    .sk-ranking-number::before {
        background: #fff;
        border: 2px solid #0099F8;
        content: '';
        display: block;
        left: 0;
        opacity: 0;
        position: absolute;
        top: 0;
        transition: all .3s;
        z-index: -1;
        height: 65px;
        width: 65px;
        border-radius: 50%;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number::before {
            height: 35px;
            width: 35px;
            border-radius: 50%;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number--1::before {
            opacity: 1;
        }
    }

    .sk-ranking-number--emea {
        background: #fe9201;
    }

    .sk-ranking-number--usa {
        background: #001E82;
    }

    .sk-ranking-number--aus {
        background: #eb3225;
    }

    .sk-ranking-number--asia {
        background: #5ab75a;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number {
            height: 35px;
            width: 35px;
            background: none;
            border-radius: 0;
            color: #000;
        }
    }

    .sk-ranking-number span {
        display: block;
    }

    .sk-ranking-number span:first-child {
        padding-bottom: 3px;
        margin-bottom: 3px;
        border-bottom: 1px solid #fff;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number span i {
            display: none;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-number span:first-of-type {
            display: none;
        }
    }

    .js-city-two-ranking {
        background: #eb3225;
    }

    @media only screen and (min-width: 1200px) {
        .js-city-two-ranking {
            background: none;
        }
    }

    .sk-ranking-info {
        -ms-flex-align: center;
        align-items: center;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: distribute;
        justify-content: space-around;
        min-width: 160px;
        position: relative;
        text-align: center;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking-info {
            left: 30px;
        }
    }

    .sk-ranking__regions {
        display: none;
        text-align: center;
    }

    .sk-ranking__regions--key {
        display: block;
        margin-bottom: 10px;
        padding-bottom: 10px;
        border-bottom: 1px solid #888;
    }

    .sk-ranking__regions--key .sk-ranking__region-name:before,
    .sk-ranking__regions--key .sk-ranking__city-name:before {
        width: 15px;
        height: 15px;
        margin-bottom: 5px;
    }

    @media only screen and (min-width: 1200px) {
        .sk-ranking__regions {
            position: absolute;
            display: block;
            right: 0;
            top: -8px;
            width: 160px;
        }
        .sk-ranking__regions--key {
            display: none;
        }
    }

    .sk-ranking__city-name,
    .sk-ranking__region-name {
        bottom: 100%;
        left: 0;
        position: absolute;
        width: 50%;
    }

    .sk-ranking__city-name::before,
    .sk-ranking__region-name::before {
        height: 10px;
        width: 10px;
        border-radius: 50%;
        background: #fe9201;
        content: '';
        display: block;
        margin: 0 auto;
    }

    .sk-ranking__city-name--two,
    .sk-ranking__region-name--two {
        left: 50%;
    }

    .sk-ranking__city-name--two::before,
    .sk-ranking__region-name--two::before {
        background: #eb3225;
    }

    .sk-ranking__city-name--usa,
    .sk-ranking__region-name--usa {
        left: 25%;
    }

    .sk-ranking__city-name--usa::before,
    .sk-ranking__region-name--usa::before {
        background: #001E82;
    }

    .sk-ranking__city-name--aus,
    .sk-ranking__region-name--aus {
        left: 50%;
    }

    .sk-ranking__city-name--aus::before,
    .sk-ranking__region-name--aus::before {
        background: #eb3225;
    }

    .sk-ranking__city-name--asia,
    .sk-ranking__region-name--asia {
        left: 75%;
    }

    .sk-ranking__city-name--asia::before,
    .sk-ranking__region-name--asia::before {
        background: #5ab75a;
    }

    .sk-ranking__city-name {
        font-size: 1.1rem;
    }

    .sk-ranking__region-name {
        width: 25%;
    }

    select::-ms-expand {
        display: none;
    }

    .select {
        display: inline-block;
        margin-bottom: 10px;
        text-align: center;
        width: 100%;
    }

    @media only screen and (min-width: 1200px) {
        .select {
            margin-right: 20px;
            text-align: left;
            width: inherit;
        }
    }

    .select--label {
        color: #001E82;
        display: block;
        margin-bottom: 5px;
    }

    .select--item-wrapper {
        background: #001E82;
        overflow: hidden;
        padding: 5px 0;
        position: relative;
    }

    .select--item-wrapper:before {
        color: #fff;
        content: "\25BE";
        display: block;
        position: absolute;
        right: 10px;
        top: 20%;
        z-index: 2;
    }

    .select--item {
        -moz-appearance: none;
        -webkit-appearance: none;
        appearance: none;
        background: transparent;
        border: 0;
        color: #fff;
        font-family: 'Telstra Akkurat';
        padding: 10px 50px 10px 10px;
        position: relative;
        text-transform: capitalize;
        z-index: 3;
        width: 280px;
        font-size: 16px;
    }

    @media only screen and (min-width: 1200px) {
        .select--item {
            width: inherit;
            font-size: 1.3rem;
        }
    }

    .select--item * {
        color: #001E82;
    }

    .btns {
        background: #001E82;
        border: 1px solid #001E82;
        color: #fff;
        font-family: 'Telstra Akkurat';
        font-size: 1.4rem;
        margin-right: 5px;
        margin-bottom: 5px;
        overflow: hidden;
        padding: 10px;
        position: relative;
        text-decoration: none;
        transition: all 0.3s ease-out;
        display: block;
    }

    @media only screen and (min-width: 600px) {
        .btns {
            display: inline-block;
            margin-bottom: 0;
            padding: 5px 10px;
        }
    }

    .btns:hover {
        background: #fff;
        color: #001E82;
    }

    .btns[class^="icon-"]:before,
    .btns[class*=" icon-"]:before {
        margin-left: 0;
        margin-right: 10px;
    }

    .btns-row {
        margin-top: 20px;
        text-align: left;
    }

    .sk-detail {
        clear: left;
        width: 100%;
    }

    @media only screen and (min-width: 1200px) {
        .sk-detail {
            float: left;
            width: calc(100% - 280px);
        }
    }

    .sk-detail h1 {
        padding-top: 10px;
    }

    @media only screen and (min-width: 600px) {
        .sk-detail h1 {
            padding-top: 0;
        }
    }

    .sk-detail h1 a {
        color: #001E82 !important;
        font-family: 'Telstra Akkurat';
        font-size: 2rem;
        font-weight: normal;
        margin-top: 5px;
        text-decoration: none;
        opacity: 1;
        position: absolute;
        top: -5px;
        right: 15px;
    }

    @media only screen and (min-width: 1200px) {
        .sk-detail h1 a {
            position: relative;
            right: inherit;
            float: right;
        }
    }

    .sk-detail h1 a:before {
        transition: all 0.3s ease-out;
    }

    .sk-detail h1 a:hover:before {
        -ms-transform: scale(1.2);
        transform: scale(1.2);
    }

    .js-city-name {
        line-height: 36px;
    }

    @media only screen and (min-width: 1200px) {
        .sk-detail .sk-summary-text {
            max-width: 70%;
        }
    }

    .sk-detail-stats {
        position: relative;
        width: 100%;
        margin: 40px 0;
    }

    @media only screen and (min-width: 1200px) {
        .sk-detail-stats {
            width: calc(100% - 250px);
            margin: 0;
        }
    }

    .sk-detail-stats ul {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .sk-detail-stats--wide {
        width: 100%;
    }

    .detail-stats-heading {
        font-size: 1.2rem;
    }

    .detail-stats-heading__blank {
        display: inline-block;
        width: 40%;
    }

    @media only screen and (min-width: 600px) {
        .detail-stats-heading__blank {
            width: 50%;
        }
    }

    .detail-stats-heading__key {
        display: inline-block;
        font-family: 'Telstra Akkurat';
        width: 28%;
    }

    .detail-stats-heading__key span {
        color: #888;
        display: inline-block;
        text-align: center;
        width: 33%;
    }

    .detail-stats-heading__key span:after {
        background: #CACBCC;
        content: '';
        display: block;
        height: calc(100% - 32px);
        margin-left: 4.5%;
        position: absolute;
        width: 1px;
    }

    .detail-stats-heading__score {
        color: #0099F8;
        display: inline-block;
        font-size: 12px;
        font-family: 'Telstra Akkurat';
        line-height: 14.4px;
        text-align: center;
        text-transform: uppercase;
        width: 10%;
    }

    .detail-stats-heading__rank {
        color: #001E82;
        display: inline-block;
        font-size: 12px;
        font-family: 'Telstra Akkurat';
        line-height: 14.4px;
        text-align: center;
        text-transform: uppercase;
        width: 10%;
    }

    .detail-stats-row {
        font-size: 1.2rem;
        position: relative;
        text-align: left;
    }

    .detail-stats-row:before {
        background: #CACBCC;
        content: '';
        display: block;
        height: 1px;
        position: absolute;
        top: 50%;
        width: 68%;
        z-index: 1;
    }

    @media only screen and (min-width: 600px) {
        .detail-stats-row:before {
            width: 78%;
        }
    }

    .detail-stats-row__label {
        display: inline-block;
        position: relative;
        z-index: 2;
        width: 40%;
    }

    @media only screen and (min-width: 600px) {
        .detail-stats-row__label {
            width: 50%;
        }
        .detail-stats-row__label:before {
            display: inline-block;
        }
    }

    .detail-stats-row h3 {
        background: #fff;
        color: #001E82 !important;
        display: inline;
        font-family: 'Telstra Akkurat';
        font-size: 1.2rem !important;
        font-weight: normal !important;
        line-height: 14.4px;
        padding-right: 20px;
    }

    .detail-stats-row h3:before {
        display: none;
    }

    @media only screen and (min-width: 600px) {
        .detail-stats-row h3:before {
            display: inline-block;
        }
    }

    .detail-stats-row__data {
        display: inline-block;
        position: relative;
        width: 28%;
    }

    .detail-stats-row__data em {
        background: #fe9201;
        border-radius: 50%;
        display: block;
        height: 12px;
        margin-top: -9px;
        position: absolute;
        top: 0;
        transition: all 0.5s;
        width: 12px;
        z-index: 9;
    }

    @media screen and (min-width: 1366px) {
        .detail-stats-row__score {
            color: #0099F8;
            display: inline-block;
            font-size: 12px !important;
            line-height: 14.4px !important;
            text-align: center !important;
            text-transform: uppercase;
            width: 10%;
            -webkit-margin-before: 1em;
            -webkit-margin-after: 1em;
        }
        .detail-stats-row__rank {
            color: #001E82;
            display: inline-block;
            font-size: 12px !important;
            line-height: 14.4px !important;
            text-align: center !important;
            text-transform: uppercase;
            width: 10%;
            -webkit-margin-before: 1em;
            -webkit-margin-after: 1em;
        }
        .detail-stats-row__rank::before {
            height: 29px;
            width: 29px;
            border-radius: 50%;
            background: #fff;
            border: 2px solid #0099F8;
            content: '';
            display: block;
            left: 50%;
            opacity: 0;
            position: absolute;
            top: -8px;
            -ms-transform: translate(-50%, 0);
            transform: translate(-50%, 0);
            transition: 0.3s ease-out;
            z-index: -1;
        }
    }

    @media screen and (max-width: 1200px) {
        .detail-stats-row__score {
            color: #0099F8;
            display: inline-block;
            font-size: 12px !important;
            line-height: 14.4px !important;
            text-align: center !important;
            text-transform: uppercase;
            width: 10%;
            -webkit-margin-before: 1em;
            -webkit-margin-after: 1em;
        }
        .detail-stats-row__rank {
            color: #001E82;
            display: inline-block;
            font-size: 12px !important;
            line-height: 14.4px !important;
            text-align: center !important;
            text-transform: uppercase;
            width: 10%;
            -webkit-margin-before: 1em;
            -webkit-margin-after: 1em;
        }
        .detail-stats-row__rank::before {
            height: 29px;
            width: 29px;
            border-radius: 50%;
            background: #fff;
            border: 2px solid #0099F8;
            content: '';
            display: block;
            left: 50%;
            opacity: 0;
            position: absolute;
            top: -8px;
            -ms-transform: translate(-50%, 0);
            transform: translate(-50%, 0);
            transition: 0.3s ease-out;
            z-index: -1;
        }
    }

    @media screen and (max-width: 1366px) {
        .detail-stats-row__score {
            color: #0099F8;
            display: inline-block;
            font-size: 12px !important;
            line-height: 14.4px !important;
            text-align: center !important;
            text-transform: uppercase;
            width: 10%;
            -webkit-margin-before: 1em;
            -webkit-margin-after: 1em;
        }
        .detail-stats-row__rank {
            color: #001E82;
            display: inline-block;
            font-size: 12px !important;
            line-height: 14.4px !important;
            text-align: center !important;
            text-transform: uppercase;
            width: 10%;
            -webkit-margin-before: 1em;
            -webkit-margin-after: 1em;
        }
        .detail-stats-row__rank::before {
            height: 29px;
            width: 29px;
            border-radius: 50%;
            background: #fff;
            border: 2px solid #0099F8;
            content: '';
            display: block;
            left: 50%;
            opacity: 0;
            position: absolute;
            top: -8px;
            -ms-transform: translate(-50%, 0);
            transform: translate(-50%, 0);
            transition: 0.3s ease-out;
            z-index: -1;
        }
    }

    @media only screen and (min-width: 1200px) {
        .detail-stats-row__rank--1::before {
            opacity: 1;
        }
    }

    .tab-industry {
        background: url(../../images/bg-industry.png) 50% 50%/contain no-repeat fixed;
    }

    @media only screen and (min-width: 1200px) {
        .tab-industry {
            background: url(../../images/bg-industry.png) 50% 50%/contain no-repeat;
        }
    }

    .tab-map {
        background: url(../../images/bg-city.png) 50% 50%/contain no-repeat;
    }

    .tab-map .tabbed-navs {
        display: none;
    }

    @media only screen and (min-width: 1200px) {
        .tab-map .tabbed-navs {
            display: block;
        }
    }

    .sk-alternative-map-nav {
        display: block;
        height: 140px;
        text-align: center;
        font-size: 1.6rem;
    }

    @media only screen and (min-width: 1200px) {
        .sk-alternative-map-nav {
            display: none;
        }
    }

    .sk-alternative-map-nav select {
        width: 280px;
    }

    @media only screen and (min-width: 1200px) {
        .map-heading {
            float: left;
            width: calc(100% - 280px);
        }
    }

    .world-map {
        height: 250px;
        width: 100%;
        margin-bottom: 15px;
    }

    @media only screen and (min-width: 600px) {
        .world-map {
            height: 500px;
            margin-bottom: 0;
        }
    }

    @media only screen and (min-width: 1200px) {
        .world-map {
            width: calc(100% - 300px);
        }
    }

    .jv-tip {
        background: #fff;
        color: #001E82;
        padding: 10px 5px;
        position: relative;
        text-align: center;
    }

    .jv-tip h3 {
        font-family: 'Telstra Akkurat';
        font-weight: bold;
        font-size: 1.8rem;
        margin: 5px 15px 15px;
        padding: 0;
    }

    .jv-tip p {
        max-width: 220px;
        padding: 0 35px 10px;
        display: block;
    }

    .jv-tip a {
        background: #001E82;
        color: #fff;
        display: block;
        font-family: 'Telstra Akkurat Light';
        padding: 10px;
        text-decoration: none;
    }

    .jv-tip:before {
        content: '';
        -ms-transform: translate(-50%, 0);
        transform: translate(-50%, 0);
        border-left: 15px solid transparent;
        border-right: 15px solid transparent;
        border-top: 15px solid #001E82;
        bottom: -15px;
        clear: both;
        height: 0;
        left: 44%;
        position: absolute;
        width: 0;
    }

    .jv-tip:after {
        content: '';
        -ms-transform: translate(-50%, 0);
        transform: translate(-50%, 0);
        border-left: 15px solid transparent;
        border-right: 15px solid transparent;
        border-top: 15px solid #fff;
        bottom: -11px;
        clear: both;
        height: 0;
        left: 44%;
        position: absolute;
        width: 0;
    }

    .socials {
        list-style: none;
        margin: 10px auto;
        padding: 10px;
        border-top: 1px solid #888;
        text-align: center;
        width: 135px;
    }

    @media only screen and (min-width: 1200px) {
        .socials {
            display: block;
            position: absolute;
            right: 30px;
            top: 0;
            margin: 10px 0;
            border: none;
            padding: 0;
        }
    }

    .socials li {
        display: inline-block;
    }

    .socials a {
        background: #001E82;
        box-sizing: border-box;
        color: #fff;
        display: inline-block;
        font-size: 1.2em;
        padding: 8px 6px;
        transition: all 0.3s ease-out;
    }

    .socials a:hover {
        background: #fff;
        color: #001E82;
    }

    .sk-tesltra-info .sk-survey-data {
        margin-top: 30px;
    }

    .sk-survey-data {
        border-top: 1px solid #888;
        color: #001E82;
        display: inline-block;
        font-family: 'Telstra Akkurat';
        width: 100%;
        padding-top: 20px;
    }

    @media only screen and (min-width: 1200px) {
        .sk-survey-data {
            padding-right: 20px;
            width: 225px;
            height: 470px;
            overflow: scroll;
            overflow-y: scroll;
            overflow-x: none;
            padding-top: 0;
            border: 0;
        }
    }

    .sk-survey-data::-webkit-scrollbar {
        -webkit-appearance: none;
        width: 7px;
    }

    .sk-survey-data::-webkit-scrollbar-thumb {
        border-radius: 4px;
        background-color: rgba(0, 0, 0, 0.2);
        -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, 0.2);
    }

    .sk-survey-data h2 {
        color: #001E82;
        font-family: 'Telstra Akkurat';
        font-size: 1.6rem;
        font-weight: normal;
        line-height: 21.6px;
        margin-bottom: 1.5rem;
        margin-top: 0;
        font-size: 14px;
    }

    .sk-survey-data h3 {
        font-size: 1.2rem !important;
        font-weight: normal !important;
        margin: 1em 0 0.4em !important;
    }

    @media only screen and (max-width: 1366px) {
        .sk-survey-data p {
            color: #001E82;
            font-size: 1.2rem !important;
            font-weight: normal;
            /* line-height: 14.4px !important; */
            margin: 0 0 0.5em !important;
        }
    }

    @media only screen and (max-width: 1200px) {
        .sk-survey-data p {
            color: #001E82;
            font-size: 1.2rem !important;
            font-weight: normal;
            /* line-height: 14.4px !important; */
            margin: 0 0 0.5em !important;
        }
    }

    @media only screen and (min-width: 1366px) {
        .sk-survey-data p {
            color: #001E82;
            font-size: 1.2rem !important;
            font-weight: normal;
            line-height: 14.4px !important;
            margin: 0 0 0.5em !important;
        }
    }

    .sk-survey-data .survey-city {
        margin-bottom: 40px;
    }

    @media only screen and (min-width: 600px) {
        .sk-survey-data .survey-city {
            width: 49%;
            padding-right: 20px;
            display: inline-block;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-survey-data .survey-city {
            width: 100%;
            padding-right: 0;
            display: block;
        }
    }

    .sk-survey-data .survey-city--1 h3 {
        color: #fe9201 !important;
    }

    .sk-survey-data .survey-city--2 h3 {
        color: #eb3225 !important;
    }

    @media only screen and (min-width: 600px) {
        .sk-survey-data.survey-city--detail h3,
        .sk-survey-data.survey-city--detail p {
            float: left;
            padding: 10px 10px 10px 0;
            margin: 0;
        }
        .sk-survey-data.survey-city--detail h3 {
            clear: left;
        }
    }

    .js-detail-survey-data {
        text-align: left;
    }

    @media only screen and (min-width: 1200px) {
        .sk-survey-data.survey-city--detail {
            border-left: 1px solid #888;
            border-right: 0;
            float: right;
            height: 230px;
            overflow-x: hidden;
            overflow-y: scroll;
            padding-left: 30px;
        }
        .sk-survey-data.survey-city--detail h3,
        .sk-survey-data.survey-city--detail p {
            float: none;
            padding: 0;
            margin: 0 0 0.3em;
        }
        .sk-survey-data.survey-city--detail h3 {
            clear: left;
            margin-top: 0.7em;
        }
    }

    .sk-survey-data.survey-city--detail h2 {
        font-size: 1.8rem;
    }

    .sk-survey-data.survey-city--detail h3 {
        color: #0099F8 !important;
    }

    .sk-detail+.tabbed-navs {
        display: none;
    }

    @media only screen and (min-width: 1200px) {
        .sk-detail+.tabbed-navs {
            display: block;
        }
    }

    .tabbed-navs {
        float: right;
        width: 240px;
    }

    .tabbed-navs .tabbed-nav {
        overflow: hidden;
        padding-bottom: 20px;
        width: 100%;
    }

    .tabbed-navs .tabbed-nav--cities {
        background: #0099F8;
    }

    .tabbed-navs .tabbed-nav--industries {
        background: #0064D2;
    }

    .tabbed-navs .nav-group {
        float: left;
        padding: 20px 0 0 25px;
        text-align: left;
    }

    .tabbed-navs .nav-group:nth-child(3) {
        clear: both;
    }

    .tabbed-navs h2 {
        color: #fff;
        font-size: 1em;
        font-weight: normal;
        margin-top: 0;
    }

    .tabbed-navs ul {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .tabbed-navs a {
        color: #fff;
        text-decoration: none;
    }

    .tabbed-navs a:hover,
    .tabbed-navs a.selected,
    .tabbed-navs a.js-selected {
        color: #001E82;
        text-decoration: underline;
    }

    .tabbed-nav-selectors {
        overflow: hidden;
    }

    .tabbed-nav-selectors li {
        background: #0064D2;
        color: #fff;
        cursor: pointer;
        display: inline-block;
        float: left;
        padding: 10px 20px;
        text-align: center;
        width: 120px;
    }

    .tabbed-nav-selectors li:first-child {
        background: #0099F8;
        border-right: 1px solid #fff;
        width: 120px;
    }

    .sk-tabs {
        margin: 0 auto;
        width: 100%;
        padding-top: 65px;
        position: relative;
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs {
            /* padding-left: 20px; */
            /* padding-right: 20px; */
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs {
            max-width: 1200px;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs {
            padding-top: 0;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs {
            height: 680px;
        }
    }

    .sk-tabs__nav {
        overflow-x: scroll;
        position: absolute;
        top: 0;
        width: 100%;
        z-index: 9;
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs__nav {
            display: -ms-flexbox;
            display: flex;
            max-width: 724px;
            overflow: visible;
            position: relative;
        }
    }

    .sk-nav-mobile-mask {
        background: rgba(0, 0, 0, 0.3);
        display: block;
        display: none;
        height: 100%;
        left: 0;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 8;
    }

    .sk-tabs__nav-item {
        -ms-flex-align: center;
        align-items: center;
        background: #001E82;
        color: #fff;
        cursor: pointer;
        display: none;
        font-family: 'Telstra Akkurat Light';
        font-size: 1.6rem;
        height: 45px;
        -ms-flex-pack: center;
        justify-content: center;
        padding: 10px;
        position: relative;
        text-align: center;
        transition: background 0.3s ease-out;
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs__nav-item {
            display: -ms-flexbox;
            display: flex;
            -ms-flex-preferred-size: 0;
            flex-basis: 0;
            -ms-flex-positive: 1;
            flex-grow: 1;
        }
    }

    .sk-tabs__nav-item:not(:last-child) {
        border-bottom: 1px solid #fff;
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs__nav-item:not(:last-child) {
            border: 0;
            border-right: 1px solid #fff;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs__nav-item:after {
            border-left: 10px solid transparent;
            border-right: 10px solid transparent;
            border-top: 10px solid #001E82;
            bottom: 0;
            clear: both;
            content: '';
            height: 0;
            left: 50%;
            position: absolute;
            -ms-transform: translate(-55%, 0);
            transform: translate(-55%, 0);
            width: 0;
        }
    }

    .sk-tabs__nav-item:hover:after,
    .sk-tabs__nav-item.js-active:after {
        bottom: -10px;
    }

    @media only screen and (max-width: 1200px) {
        .sk-tabs__nav-item:hover,
        .sk-tabs__nav-item.js-active {
            background: #0099F8;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs__nav-item--city-map {
            background: #001E82;
        }
        .sk-tabs__nav-item--ind {
            background: #0064D2;
        }
        .sk-tabs__nav-item--ind:after {
            border-top: 10px solid #0064D2;
        }
        .sk-tabs__nav-item--city {
            background: #0099F8;
        }
        .sk-tabs__nav-item--city:after {
            border-top: 10px solid #0099F8;
        }
    }

    .sk-tabs__nav-item--hidden {
        display: none;
    }

    .sk-tabs__nav--mobile-label {
        display: block;
        background: #0099F8;
        padding: 15px;
        height: 55px;
    }

    .sk-tabs__nav--mobile-label em {
        position: absolute;
        transition: all 0.3s ease-out;
    }

    .sk-tabs__nav--mobile-label.open {
        background: #fff;
        color: #001E82;
    }

    .sk-tabs__nav--mobile-label.open em {
        -ms-transform: rotate(180deg);
        transform: rotate(180deg);
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs__nav--mobile-label {
            display: none;
        }
    }

    .sk-tabs__content {
        overflow: hidden;
        position: relative;
    }

    .sk-tabs__content-item {
        opacity: 0;
        padding: 15px;
        position: absolute;
        transition: opacity .3s 0s ease-out, z-index 0s .3s;
        width: 100%;
        z-index: 1;
    }

    @media only screen and (min-width: 600px) {
        .sk-tabs__content-item {
            min-height: 700px;
        }
    }

    @media only screen and (min-width: 1200px) {
        .sk-tabs__content-item {
            padding: 25px 0 25px 25px;
        }
    }

    .sk-tabs__content-item.js-active {
        opacity: 1;
        transition: opacity .3s 0s ease-out, z-index 0s 0s;
        z-index: 2;
    }
    /*# sourceMappingURL=data:application/json;charset=utf8;base64, */
    /*# sourceMappingURL=data:application/json;charset=utf8;base64, */